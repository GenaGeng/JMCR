<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="mcr-test">
    <property environment="env"/>
    <property name="derby-10.3.2.1.location" value="../real-world application/derby-10.3.2.1"/>
    <property name="ECLIPSE_HOME" value="/Applications/Eclipse.app/Contents/Eclipse/"/>
    <property name="mcr-test.location" value="../mcr-test"/>
    <property name="mcr-controller.location" value="../mcr-controller"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="mcr-engine.location" value="../mcr-engine"/>
    <property name="jigsaw.location" value="../real-world application/jigsaw"/>
    <property name="log4j.location" value="../log4j"/>
    <property name="weblech.location" value="../real-world application/weblech"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>
    <path id="JUnit 4.libraryclasspath">
        <pathelement location="${ECLIPSE_HOME}plugins/org.junit_4.12.0.v201504281640/junit.jar"/>
        <pathelement location="${ECLIPSE_HOME}plugins/org.hamcrest.core_1.3.0.v201303031735.jar"/>
    </path>
    <path id="mcr-engine.classpath">
        <pathelement location="${mcr-engine.location}/bin"/>
        <pathelement location="${mcr-engine.location}/lib/ant.jar"/>
        <pathelement location="${mcr-engine.location}/lib/jcommander-1.36.jar"/>
        <pathelement location="${mcr-engine.location}/lib/h2-rvpredict.jar"/>
        <pathelement location="${ECLIPSE_HOME}"/>
        <pathelement location="${mcr-engine.location}/com.microsoft.z3.jar"/>
        <pathelement location="${mcr-engine.location}/lib/jigsaw-sexpr.jar"/>
        <pathelement location="${mcr-engine.location}/lib/joana.api.jar"/>
        <pathelement location="${mcr-engine.location}/lib/joana.ifc.sdg.core.jar"/>
        <pathelement location="${mcr-engine.location}/lib/joana.ui.ifc.sdg.graphviewer.jar"/>
        <pathelement location="${mcr-engine.location}/lib/joana.ui.ifc.wala.console.jar"/>
        <pathelement location="${mcr-engine.location}/lib/joana.wala.core.jar"/>
        <pathelement location="${mcr-engine.location}/lib/joana.wala.dictionary.jar"/>
        <pathelement location="${mcr-engine.location}/lib/joana.wala.jodroid.jar"/>
    </path>
    <path id="aser-schedule-controller.classpath">
        <pathelement location="${mcr-controller.location}/bin"/>
        <pathelement location="${mcr-controller.location}/lib/imunit.jar"/>
        <pathelement location="${mcr-controller.location}/lib/junit.jar"/>
        <pathelement location="${mcr-controller.location}/lib/org.hamcrest.core.jar"/>
        <pathelement location="${mcr-controller.location}/lib/guava-21.0.jar"/>
        <pathelement location="${mcr-controller.location}/lib/asm.jar"/>
        <path refid="mcr-engine.classpath"/>
    </path>
    <path id="log4j.classpath">
        <pathelement location="${log4j.location}/bin"/>
        <pathelement location="${log4j.location}/lib/jms.jar"/>
        <pathelement location="${log4j.location}/lib/mail.jar"/>
        <pathelement location="${log4j.location}/lib/oro-2.0.8.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
    </path>
    <path id="weblech.classpath">
        <pathelement location="${weblech.location}/bin"/>
        <path refid="log4j.classpath"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <path refid="mcr-engine.classpath"/>
        <path refid="aser-schedule-controller.classpath"/>
        <pathelement location="${mcr-test.location}/lib/iagent.jar"/>
        <pathelement location="${mcr-test.location}/lib/imunit.jar"/>
    </path>
    <path id="jigsaw.classpath">
        <pathelement location="${jigsaw.location}/bin"/>
        <pathelement location="${jigsaw.location}/classes/jakarta-oro-2.0.8.jar"/>
        <pathelement location="${jigsaw.location}/classes/sax.jar"/>
        <pathelement location="${jigsaw.location}/classes/servlet.jar"/>
        <pathelement location="${jigsaw.location}/classes/Tidy.jar"/>
        <pathelement location="${jigsaw.location}/classes/xerces.jar"/>
        <pathelement location="${jigsaw.location}/classes/xp.jar"/>
        <pathelement location="${jigsaw.location}/classes/tools.jar"/>
        <pathelement location="${mcr-controller.location}/lib/asm.jar"/>
        <pathelement location="${mcr-controller.location}/lib/h2-1.3.171.jar"/>
        <pathelement location="${mcr-controller.location}/lib/iagent.jar"/>
        <pathelement location="${mcr-test.location}/lib/iagent.jar"/>
        <pathelement location="${mcr-test.location}/lib/imunit.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <path refid="aser-schedule-controller.classpath"/>
    </path>
    <path id="derby-10.3.2.1.classpath">
        <pathelement location="${derby-10.3.2.1.location}/build"/>
        <pathelement location="${derby-10.3.2.1.location}/lib/commons-io-1.1.jar"/>
        <pathelement location="${derby-10.3.2.1.location}/lib/commons-logging-1.0.4.jar"/>
        <pathelement location="${derby-10.3.2.1.location}/lib/serializer-2.7.0.jar"/>
        <pathelement location="${derby-10.3.2.1.location}/lib/xalan-2.7.0.jar"/>
        <pathelement location="${derby-10.3.2.1.location}/lib/xercesImpl-2.7.1.jar"/>
        <pathelement location="${derby-10.3.2.1.location}/lib/batik-all-1.6.jar"/>
        <pathelement location="${derby-10.3.2.1.location}/lib/fop.jar"/>
        <pathelement location="${derby-10.3.2.1.location}/lib/jstats.jar"/>
        <pathelement location="${derby-10.3.2.1.location}/lib/xml-apis-1.3.02.jar"/>
        <pathelement location="${derby-10.3.2.1.location}/lib/xmlgraphics-commons-1.1.jar"/>
        <pathelement location="${mcr-test.location}/lib/iagent.jar"/>
        <pathelement location="${mcr-test.location}/lib/imunit.jar"/>
    </path>
    <path id="mcr-test.classpath">
        <pathelement location="bin"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <path refid="aser-schedule-controller.classpath"/>
        <path refid="mcr-engine.classpath"/>
        <path refid="weblech.classpath"/>
        <path refid="log4j.classpath"/>
        <path refid="jigsaw.classpath"/>
        <pathelement location="${derby-10.3.2.1.location}/lib/ant-contrib.jar"/>
        <pathelement location="${derby-10.3.2.1.location}/lib/avalon-framework-4.2.0.jar"/>
        <pathelement location="${derby-10.3.2.1.location}/lib/batik-all-1.6.jar"/>
        <pathelement location="${derby-10.3.2.1.location}/lib/commons-io-1.1.jar"/>
        <pathelement location="${derby-10.3.2.1.location}/lib/commons-logging-1.0.4.jar"/>
        <pathelement location="${derby-10.3.2.1.location}/lib/fop.jar"/>
        <pathelement location="${derby-10.3.2.1.location}/lib/jstats.jar"/>
        <pathelement location="${derby-10.3.2.1.location}/lib/serializer-2.7.0.jar"/>
        <pathelement location="${derby-10.3.2.1.location}/lib/xalan-2.7.0.jar"/>
        <pathelement location="${derby-10.3.2.1.location}/lib/xercesImpl-2.7.1.jar"/>
        <pathelement location="${derby-10.3.2.1.location}/lib/xml-apis-1.3.02.jar"/>
        <pathelement location="${derby-10.3.2.1.location}/lib/xmlgraphics-commons-1.1.jar"/>
        <pathelement location="lib/iagent.jar"/>
        <path refid="derby-10.3.2.1.classpath"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall">
        <ant antfile="build.xml" dir="${mcr-engine.location}" inheritAll="false" target="clean"/>
        <ant antfile="build.xml" dir="${mcr-controller.location}" inheritAll="false" target="clean"/>
        <ant antfile="build.xml" dir="${derby-10.3.2.1.location}" inheritAll="false" target="clean"/>
        <ant antfile="build.xml" dir="${jigsaw.location}" inheritAll="false" target="clean"/>
        <ant antfile="build.xml" dir="${log4j.location}" inheritAll="false" target="clean"/>
        <ant antfile="build.xml" dir="${weblech.location}" inheritAll="false" target="clean"/>
    </target>
    <target depends="build-mcr-projects,build-project" name="build"/>
              	<target name="build-mcr-projects">
              	        <ant antfile="build.xml" dir="${mcr-engine.location}" inheritAll="false" target="build-project">
              	            <propertyset>
              	                <propertyref name="build.compiler"/>
              	            </propertyset>
              	        </ant>
              	        <ant antfile="build.xml" dir="${mcr-controller.location}" inheritAll="false" target="build-project">
              	            <propertyset>
              	                <propertyref name="build.compiler"/>
              	            </propertyset>
              	        </ant>
              	        
              	    </target>          	
    <target name="build-subprojects">
        
        <ant antfile="build.xml" dir="${derby-10.3.2.1.location}" inheritAll="false">
            <propertyset>
                <propertyref name="build.compiler"/>
            </propertyset>
        </ant>
        <ant antfile="build.xml" dir="${jigsaw.location}" inheritAll="false" >
            <propertyset>
                <propertyref name="build.compiler"/>
            </propertyset>
        </ant>
        <ant antfile="build.xml" dir="${log4j.location}" inheritAll="false">
            <propertyset>
                <propertyref name="build.compiler"/>
            </propertyset>
        </ant>
        <ant antfile="build.xml" dir="${weblech.location}" inheritAll="false">
            <propertyset>
                <propertyref name="build.compiler"/>
            </propertyset>
        </ant>
    </target>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>

        	<exclude name="edu/tamu/aser/rvtest/weblech/WeblechTest.java"/>
        	<exclude name="edu/tamu/aser/rvtest/jigsaw/JigsawTest.java"/>
        	<exclude name="edu/tamu/aser/rvtest/derby/DerbyTest.java"/>

            <classpath refid="mcr-test.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="Account">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="edu.tamu.aser.rvtest.account2.Account" todir="${junit.output.dir}"/>
            <classpath refid="mcr-test.classpath"/>
        </junit>
    </target>
    <target name="AccountTest_MCR">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="edu.tamu.aser.rvtest.account.AccountTest" todir="${junit.output.dir}"/>
            <jvmarg line="-Xmx1g -javaagent:lib/iagent.jar -Dmcr.exploration.schedulingstrategy=edu.tamu.aser.scheduling.strategy.MCRStrategy"/>
            <classpath refid="mcr-test.classpath"/>
        </junit>
    </target>
    <target name="AirlineTest_MCR">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="edu.tamu.aser.rvtest.airline.AirlineTest" todir="${junit.output.dir}"/>
            <jvmarg line="-Xmx1g -javaagent:lib/iagent.jar -Dmcr.exploration.schedulingstrategy=edu.tamu.aser.scheduling.strategy.MCRStrategy"/>
            <classpath refid="mcr-test.classpath"/>
        </junit>
    </target>
    <target name="AllocationTest_MCR">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="edu.tamu.aser.rvtest.allocationvector.AllocationTest" todir="${junit.output.dir}"/>
            <jvmarg line="-Xmx1g -javaagent:lib/iagent.jar -Dmcr.exploration.schedulingstrategy=edu.tamu.aser.scheduling.strategy.MCRStrategy"/>
            <classpath refid="mcr-test.classpath"/>
        </junit>
    </target>
    <target name="ArrayAccessTests">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="edu.tamu.aser.rvtest_simple_tests.ArrayAccessTests" todir="${junit.output.dir}"/>
            <jvmarg line="-Xmx1g -javaagent:lib/iagent.jar -Dmcr.exploration.schedulingstrategy=edu.tamu.aser.scheduling.strategy.MCRStrategy -Dmemory_model=SC"/>
            <classpath refid="mcr-test.classpath"/>
        </junit>
    </target>
    <target name="BoundedBuffer">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="edu.tamu.aser.rvtest.boundedbuffer.BoundedBuffer" todir="${junit.output.dir}"/>
            <jvmarg line="-Xmx1g -javaagent:lib/iagent.jar -Dmcr.exploration.schedulingstrategy=edu.tamu.aser.scheduling.strategy.MCRStrategy"/>
            <classpath refid="mcr-test.classpath"/>
        </junit>
    </target>
    <target name="BubbleSortTest_MCR">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="edu.tamu.aser.rvtest.bubblesort.BubbleSortTest" todir="${junit.output.dir}"/>
            <jvmarg line="-Xmx1g -javaagent:lib/iagent.jar -Dmcr.exploration.schedulingstrategy=edu.tamu.aser.scheduling.strategy.MCRStrategy"/>
            <classpath refid="mcr-test.classpath"/>
        </junit>
    </target>
    <target name="BufferTest (1)">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="edu.tamu.aser.rvtest.buffer.BufferTest" todir="${junit.output.dir}"/>
            <jvmarg line="-Xmx1g -javaagent:lib/iagent.jar -Dmcr.exploration.schedulingstrategy=edu.tamu.aser.scheduling.strategy.MCRStrategy -Dmemory_model=SC"/>
            <classpath refid="mcr-test.classpath"/>
        </junit>
    </target>
    <target name="BufWriter">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="edu.tamu.aser.rvtest.bufwriter.BufWriter" todir="${junit.output.dir}"/>
            <jvmarg line="-Xmx1g -javaagent:lib/iagent.jar -Dmcr.exploration.schedulingstrategy=edu.tamu.aser.scheduling.strategy.MCRStrategy -Dmemory_model=SC"/>
            <classpath refid="mcr-test.classpath"/>
        </junit>
    </target>
    <target name="Critical">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="edu.tamu.aser.rvtest_simple_tests.Critical" todir="${junit.output.dir}"/>
            <jvmarg line="-Xmx1g -javaagent:lib/iagent.jar -Dmcr.exploration.schedulingstrategy=edu.tamu.aser.scheduling.strategy.MCRStrategy"/>
            <classpath refid="mcr-test.classpath"/>
        </junit>
    </target>
    <target name="DataChoiceTests (1)">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="edu.tamu.aser.tests.DataChoiceTests" todir="${junit.output.dir}"/>
            <classpath refid="mcr-test.classpath"/>
        </junit>
    </target>
    <target name="DerbyTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="edu.tamu.aser.rvtest.derby.DerbyTest" todir="${junit.output.dir}"/>
            <jvmarg line="-Xmx1g -javaagent:lib/iagent.jar -Dmcr.exploration.schedulingstrategy=edu.tamu.aser.scheduling.strategy.MCRStrategy"/>
            <classpath refid="mcr-test.classpath"/>
        </junit>
    </target>
    <target name="Example">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="edu.tamu.aser.rvtest_simple_tests.Example" todir="${junit.output.dir}"/>
            <env key="z3" value="/usr/local/bin"/>
            <jvmarg line="-Xmx1g -javaagent:lib/iagent.jar -Dmcr.exploration.schedulingstrategy=edu.tamu.aser.scheduling.strategy.MCRStrategy"/>
            <classpath refid="mcr-test.classpath"/>
        </junit>
    </target>
    <target name="Example1">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="edu.tamu.aser.rvtest_simple_tests.Example1" todir="${junit.output.dir}"/>
            <jvmarg line="-Xmx1g -javaagent:lib/iagent.jar -Dmcr.exploration.schedulingstrategy=edu.tamu.aser.scheduling.strategy.MCRStrategy"/>
            <classpath refid="mcr-test.classpath"/>
        </junit>
    </target>
    <target name="Example2">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="edu.tamu.aser.rvtest_simple_tests.Example2" todir="${junit.output.dir}"/>
            <jvmarg line="-Xmx1g -javaagent:lib/iagent.jar -Dmcr.exploration.schedulingstrategy=edu.tamu.aser.scheduling.strategy.MCRStrategy"/>
            <classpath refid="mcr-test.classpath"/>
        </junit>
    </target>
    <target name="FTPTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="edu.tamu.aser.rvtest.ftpserver.FTPTest" todir="${junit.output.dir}"/>
            <classpath refid="mcr-test.classpath"/>
        </junit>
    </target>
    <target name="JavaUtilConcurrentTests (1)">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="edu.tamu.aser.rvtest_simple_tests.JavaUtilConcurrentTests" todir="${junit.output.dir}"/>
            <jvmarg line="-Xmx1g -javaagent:lib/iagent.jar -Dmcr.exploration.schedulingstrategy=edu.tamu.aser.scheduling.strategy.MCRStrategy -Dmemory_model=SC"/>
            <classpath refid="mcr-test.classpath"/>
        </junit>
    </target>
    <target name="JigsawTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="edu.tamu.aser.rvtest.jigsaw.JigsawTest" todir="${junit.output.dir}"/>
            <jvmarg line="-Xmx1g -javaagent:lib/iagent.jar -Dmcr.exploration.schedulingstrategy=edu.tamu.aser.scheduling.strategy.MCRStrategy"/>
            <classpath refid="mcr-test.classpath"/>
        </junit>
    </target>
    <target name="MergeSort">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="edu.tamu.aser.rvtest.mergesort.MergeSort" todir="${junit.output.dir}"/>
            <jvmarg line="-Xmx1g -javaagent:lib/iagent.jar -Dmcr.exploration.schedulingstrategy=edu.tamu.aser.scheduling.strategy.MCRStrategy"/>
            <classpath refid="mcr-test.classpath"/>
        </junit>
    </target>
    <target name="MonitorsAndFieldModification (1)">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="edu.tamu.aser.rvtest_simple_tests.MonitorsAndFieldModification" todir="${junit.output.dir}"/>
            <jvmarg line="-Xmx1g -javaagent:lib/iagent.jar -Dmcr.exploration.schedulingstrategy=edu.tamu.aser.scheduling.strategy.MCRStrategy"/>
            <classpath refid="mcr-test.classpath"/>
        </junit>
    </target>
    <target name="MotivatingExample_MCR">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="edu.tamu.aser.rvtest_simple_tests.MotivatingExample" todir="${junit.output.dir}"/>
            <jvmarg line="-Xmx1g -javaagent:lib/iagent.jar -Dmcr.exploration.schedulingstrategy=edu.tamu.aser.scheduling.strategy.MCRStrategy"/>
            <classpath refid="mcr-test.classpath"/>
        </junit>
    </target>
    <target name="MTListTest_MCR">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="edu.tamu.aser.rvtest.list.MTListTest" todir="${junit.output.dir}"/>
            <jvmarg line="-Xmx1g -javaagent:lib/iagent.jar -Dmcr.exploration.schedulingstrategy=edu.tamu.aser.scheduling.strategy.MCRStrategy"/>
            <classpath refid="mcr-test.classpath"/>
        </junit>
    </target>
    <target name="MTSetTest_MCR">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="edu.tamu.aser.rvtest.list.MTSetTest" todir="${junit.output.dir}"/>
            <jvmarg line="-Xmx1g -javaagent:lib/iagent.jar -Dmcr.exploration.schedulingstrategy=edu.tamu.aser.scheduling.strategy.MCRStrategy"/>
            <classpath refid="mcr-test.classpath"/>
        </junit>
    </target>
    <target name="MyCounter_MCR">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="edu.tamu.aser.rvtest_simple_tests.MyCounter" todir="${junit.output.dir}"/>
            <jvmarg line="-Xmx1g -javaagent:lib/iagent.jar -Dmcr.exploration.schedulingstrategy=edu.tamu.aser.scheduling.strategy.MCRStrategy"/>
            <classpath refid="mcr-test.classpath"/>
        </junit>
    </target>
    <target name="mytest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="edu.tamu.aser.rvtest_simple_tests.mytest" todir="${junit.output.dir}"/>
            <jvmarg line="-Xmx1g -javaagent:lib/iagent.jar -Dmcr.exploration.schedulingstrategy=edu.tamu.aser.scheduling.strategy.MCRStrategy"/>
            <classpath refid="mcr-test.classpath"/>
        </junit>
    </target>
    <target name="NotifyTest">
        <java classname="edu.tamu.aser.rvtest_simple_tests.NotifyTest" failonerror="true" fork="yes">
            <classpath refid="mcr-test.classpath"/>
        </java>
    </target>
    <target name="NotifyTest_MCR">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="edu.tamu.aser.rvtest_simple_tests.NotifyTest" todir="${junit.output.dir}"/>
            <jvmarg line="-Xmx1g -javaagent:lib/iagent.jar -Dmcr.exploration.schedulingstrategy=edu.tamu.aser.scheduling.strategy.MCRStrategy"/>
            <classpath refid="mcr-test.classpath"/>
        </junit>
    </target>
    <target name="PingPong_MCR">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="edu.tamu.aser.rvtest.pingpong.PingPong" todir="${junit.output.dir}"/>
            <jvmarg line="-Xmx1g -javaagent:lib/iagent.jar -Dmcr.exploration.schedulingstrategy=edu.tamu.aser.scheduling.strategy.MCRStrategy"/>
            <classpath refid="mcr-test.classpath"/>
        </junit>
    </target>
    <target name="pool107">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="edu.tamu.aser.rvtest.pool107.pool107" todir="${junit.output.dir}"/>
            <jvmarg line="-Xmx1g -javaagent:lib/iagent.jar -Dmcr.exploration.schedulingstrategy=edu.tamu.aser.scheduling.strategy.MCRStrategy"/>
            <classpath refid="mcr-test.classpath"/>
        </junit>
    </target>
    <target name="ProducerConsumer_MCR">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="edu.tamu.aser.rvtest_simple_tests.ProducerConsumer" todir="${junit.output.dir}"/>
            <jvmarg line="-Xmx1g -javaagent:lib/iagent.jar -Dmcr.exploration.schedulingstrategy=edu.tamu.aser.scheduling.strategy.MCRStrategy"/>
            <classpath refid="mcr-test.classpath"/>
        </junit>
    </target>
    <target name="RVExample_MCR">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="edu.tamu.aser.rvtest_simple_tests.RVExample" todir="${junit.output.dir}"/>
            <jvmarg line="-Xmx1g -javaagent:lib/iagent.jar -Dmcr.exploration.schedulingstrategy=edu.tamu.aser.scheduling.strategy.MCRStrategy"/>
            <classpath refid="mcr-test.classpath"/>
        </junit>
    </target>
    <target name="SharedObjecTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="edu.tamu.aser.rvtest.sharedobject.SharedObjecTest" todir="${junit.output.dir}"/>
            <jvmarg line="-Xmx1g -javaagent:lib/iagent.jar -Dmcr.exploration.schedulingstrategy=edu.tamu.aser.scheduling.strategy.MCRStrategy"/>
            <classpath refid="mcr-test.classpath"/>
        </junit>
    </target>
    <target name="StringBufferTest_MCR">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="edu.tamu.aser.rvtest.stringbuffer.StringBufferTest" todir="${junit.output.dir}"/>
            <jvmarg line="-Xmx1g -javaagent:lib/iagent.jar -Dmcr.exploration.schedulingstrategy=edu.tamu.aser.scheduling.strategy.MCRStrategy"/>
            <classpath refid="mcr-test.classpath"/>
        </junit>
    </target>
    <target name="TestDeadlock (1)">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="edu.tamu.aser.rvtest_simple_tests.TestDeadlock" todir="${junit.output.dir}"/>
            <jvmarg line="-Xmx1g -javaagent:lib/iagent.jar -Dmcr.exploration.schedulingstrategy=edu.tamu.aser.scheduling.strategy.MCRStrategy"/>
            <classpath refid="mcr-test.classpath"/>
        </junit>
    </target>
    <target name="TestDividebyZero_MCR">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="edu.tamu.aser.rvtest_simple_tests.TestDividebyZero" todir="${junit.output.dir}"/>
            <jvmarg line="-Xmx1g -javaagent:lib/iagent.jar -Dmcr.exploration.schedulingstrategy=edu.tamu.aser.scheduling.strategy.MCRStrategy -Dmemory_model=SC"/>
            <classpath refid="mcr-test.classpath"/>
        </junit>
    </target>
    <target name="TestLocks">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="edu.tamu.aser.rvtest_simple_tests.TestLocks" todir="${junit.output.dir}"/>
            <jvmarg line="-Xmx1g -javaagent:lib/iagent.jar -Dmcr.exploration.schedulingstrategy=edu.tamu.aser.scheduling.strategy.MCRStrategy"/>
            <classpath refid="mcr-test.classpath"/>
        </junit>
    </target>
    <target name="TestString">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="edu.tamu.aser.rvtest_simple_tests.TestString" todir="${junit.output.dir}"/>
            <jvmarg line="-Xmx1g -javaagent:lib/iagent.jar -Dmcr.exploration.schedulingstrategy=edu.tamu.aser.scheduling.strategy.MCRStrategy"/>
            <classpath refid="mcr-test.classpath"/>
        </junit>
    </target>
    <target name="TestSynchronizedMethod">
        <java classname="edu.tamu.aser.rvtest_simple_tests.TestSynchronizedMethod" failonerror="true" fork="yes">
            <classpath refid="mcr-test.classpath"/>
        </java>
    </target>
    <target name="TestWaitNotify_MCR">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="edu.tamu.aser.rvtest_simple_tests.TestWaitNotify" todir="${junit.output.dir}"/>
            <jvmarg line="-Xmx1g -javaagent:lib/iagent.jar -Dmcr.exploration.schedulingstrategy=edu.tamu.aser.scheduling.strategy.MCRStrategy"/>
            <classpath refid="mcr-test.classpath"/>
        </junit>
    </target>
    <target name="WeblechTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="edu.tamu.aser.rvtest.weblech.WeblechTest" todir="${junit.output.dir}"/>
            <jvmarg line="-Xmx1g -javaagent:lib/iagent.jar -Dmcr.exploration.schedulingstrategy=edu.tamu.aser.scheduling.strategy.MCRStrategy"/>
            <classpath refid="mcr-test.classpath"/>
        </junit>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>
