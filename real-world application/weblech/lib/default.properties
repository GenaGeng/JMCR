# Scheduling strategy that defines how interleavings will be searched
#reex.exploration.schedulingstrategy = edu.tamu.aser.scheduling.strategy.ReproScheduleStrategy
#reex.exploration.schedulingstrategy = edu.tamu.aser.scheduling.strategy.RandomDepthFirstStrategy
reex.exploration.schedulingstrategy = edu.tamu.aser.scheduling.strategy.IterativeContextBoundingStrategy
#reex.exploration.schedulingstrategy = edu.tamu.aser.scheduling.strategy.RandomIterativeContextBoundingStrategy

#reex.exploration.randomseed = 100

# Specifies choices to reproduce a single buggy schedule
#reex.exploration.reprochoices = 
reex.exploration.reprochoices = 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2

#reex.exploration.debug=true

reex.exploration.preemptionbound = 2

reex.exploration.stoponfirsterror = true

# A package specified as a.b will have the effect of ignoring a.b.*
reex.instrumentation.packages.ignore.prefixes = edu.illinois.imunit;\
  com.sun; \
  edu.tamu.aser; \
  java; \
  javax; \
  junit; \
  org.hamcrest; \
  org.junit; \
  org.objectweb.asm; \
  sun; \
  sunw; \
  org.eclipse.jdt.internal.junit4; \
  org.eclipse.jdt.internal.junit; \
  edu.tamu.aser; \
  rvpredict; \
  edu.tamu.aser.rvinstrumentation; \
  org.apache.commons.cli; \
  org.w3c

# A package specified as a.b will have the effect of ignoring only a.b
reex.instrumentation.packages.ignore = 

# A class specified as a.b.Class will have the effect of ignoring a.b.Class*
# java.lang.reflect automatically generates $Proxy# classes in default package
reex.instrumentation.classes.ignore.prefixes = \
  $Proxy

# A class specified as a.b.Class will have the effect of ignoring only a.b.Class
reex.instrumentation.classes.ignore = 

# A package specified as a.b will have the effect of allowing a.b.*, with precedence over ignorance
reex.instrumentation.packages.allow.prefixes = \
  edu.tamu.aser.test; \
  edu.tamu.aser.rvtest

# A package specified as a.b will have the effect of allowing a.b, with precedence over ignorance
reex.instrumentation.packages.allow = \

#  java.util.concurrent.locks; \
#  java.util.concurrent

# A class specified as a.b.Class will have the effect of allowing a.b.Class*, with precedence over ignorance
reex.instrumentation.classes.allow.prefixes = 

# A class specified as a.b.Class will have the effect of allowing a.b.Class, with precedence over ignorance
reex.instrumentation.classes.allow =

# Listeners
reex.exploration.listeners = edu.tamu.aser.listeners.PaperStatsListener