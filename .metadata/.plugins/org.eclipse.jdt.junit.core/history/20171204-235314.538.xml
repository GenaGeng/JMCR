<?xml version="1.0" encoding="UTF-8"?><testrun name="PoolTest" project="stormpot-master" tests="294" started="294" failures="0" errors="0" ignored="0">
  <testsuite name="stormpot.PoolTest" time="3.795">
    <testsuite name="[blazePool]" time="1.944">
      <testcase name="mustProactivelyReallocatePoisonedSlotsWhenAllocatorStopsReturningNull[blazePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="awaitWithTimeoutMustReturnTrueIfCompletesWithinTimeout[blazePool]" classname="stormpot.PoolTest" time="0.0"/>
      <testcase name="mustDeallocateAllPoolablesBeforeShutdownTaskReturns[blazePool]" classname="stormpot.PoolTest" time="0.0"/>
      <testcase name="managedPoolMustNotCountShutDownAsLeak[blazePool]" classname="stormpot.PoolTest" time="0.0"/>
      <testcase name="applyMustReturnEmptyIfTimeoutElapses[blazePool]" classname="stormpot.PoolTest" time="0.0"/>
      <testcase name="throwingInterruptedExceptionFromClaimMustClearInterruptedFlag[blazePool]" classname="stormpot.PoolTest" time="0.011"/>
      <testcase name="awaitWithTimeoutOnCompletionMustThrowUponInterruption[blazePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="awaitOnFinishedCompletionMustClearInterruption[blazePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="claimWithTimeoutValueLessThanOneMustReturnImmediately[blazePool]" classname="stormpot.PoolTest" time="0.014"/>
      <testcase name="constructorMustThrowOnNullExpiration[blazePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="slotInfoClaimCountMustIncreaseWithClaims[blazePool]" classname="stormpot.PoolTest" time="0.018"/>
      <testcase name="biasedClaimMustUpgradeToOrdinaryClaimIfTheObjectIsPulledFromTheQueue[blazePool]" classname="stormpot.PoolTest" time="0.014"/>
      <testcase name="managedPoolMustReturnMinusOneForLeakedObjectCountWhenDetectionIsDisabled[blazePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="slotInfoAgeMustResetAfterAllocation[blazePool]" classname="stormpot.PoolTest" time="0.113"/>
      <testcase name="applyMustThrowOnInterrupt[blazePool]" classname="stormpot.PoolTest" time="0.003"/>
      <testcase name="slotInfoMustBeAbleToProduceRandomNumbers[blazePool]" classname="stormpot.PoolTest" time="0.021"/>
      <testcase name="managedPoolMustReturnNaNWhenNoMetricsRecorderHasBeenConfigured[blazePool]" classname="stormpot.PoolTest" time="0.005"/>
      <testcase name="mustBeAbleToShutDownWhenAllocateAlwaysThrows[blazePool]" classname="stormpot.PoolTest" time="0.003"/>
      <testcase name="mustNotThrowWhenReleasingObjectClaimedByAnotherThread[blazePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="awaitOnCompletionWhenInterruptedMustClearInterruption[blazePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="supplyMustThrowIfThePoolIsShutDown[blazePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="targetSizeMustBeGreaterThanZero[blazePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="managedPoolLeakedObjectCountMustStartAtZero[blazePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="applyMustReturnResultOfFunction[blazePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="managedPoolMustCountReallocationsFailingByReturningNull[blazePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="managedPoolMustRecordObjectLifetimeOnDeallocateInConfiguredMetricsRecorder[blazePool]" classname="stormpot.PoolTest" time="0.06"/>
      <testcase name="slotInfoClaimCountMustResetIfSlotsAreReused[blazePool]" classname="stormpot.PoolTest" time="0.003"/>
      <testcase name="mustProactivelyReallocatePoisonedSlotsWhenReallocatorStopsReturningNull[blazePool]" classname="stormpot.PoolTest" time="0.003"/>
      <testcase name="mustCheckObjectExpirationInBackgroundWhenEnabled[blazePool]" classname="stormpot.PoolTest" time="0.053"/>
      <testcase name="managedPoolInterfaceMustBeMXBeanConformant[blazePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="supplyMustThrowOnNullConsumer[blazePool]" classname="stormpot.PoolTest" time="0.006"/>
      <testcase name="depletedPoolThatHasBeenShutDownMustThrowUponClaimEvenAfterSomeTime[blazePool]" classname="stormpot.PoolTest" time="0.012"/>
      <testcase name="managedPoolMustBeExposableThroughAnMBeanServerAsAnMXBean[blazePool]" classname="stormpot.PoolTest" time="0.069"/>
      <testcase name="backgroundExpirationMustExpireObjectsWhenExpirationThrows[blazePool]" classname="stormpot.PoolTest" time="0.056"/>
      <testcase name="constructorMustThrowOnNullThreadFactory[blazePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="mustReallocateExplicitlyExpiredObjectsInBackgroundWithBackgroundExpiration[blazePool]" classname="stormpot.PoolTest" time="0.053"/>
      <testcase name="poolMustTolerateInterruptedExceptionFromAllocatorWhenNotShutDown[blazePool]" classname="stormpot.PoolTest" time="0.003"/>
      <testcase name="managedPoolMustRecordObjectLifetimeOnReallocateInConfiguredMetricsRecorder[blazePool]" classname="stormpot.PoolTest" time="0.006"/>
      <testcase name="claimMustReturnNullIfTimeoutElapses[blazePool]" classname="stormpot.PoolTest" time="0.003"/>
      <testcase name="supplyMustThrowOnInterrupt[blazePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="mustDeallocateExplicitlyExpiredObjects[blazePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="blockingClaimWithTimeoutMustWaitIfPoolIsEmpty[blazePool]" classname="stormpot.PoolTest" time="0.007"/>
      <testcase name="applyMustThrowOnNullFunction[blazePool]" classname="stormpot.PoolTest" time="0.004"/>
      <testcase name="explicitlyExpiryMustBeIdempotent[blazePool]" classname="stormpot.PoolTest" time="0.006"/>
      <testcase name="mustNotReallocateWhenReleasingExpiredObjectsIntoShrunkPool[blazePool]" classname="stormpot.PoolTest" time="0.003"/>
      <testcase name="poolThatHasBeenShutDownMustThrowUponClaimEvenIfItHasAvailableUnbiasedObjects[blazePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="applyMustCallFunctionIfObjectClaimedWithinTimeout[blazePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="blockedClaimMustThrowWhenPoolIsShutDown[blazePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="claimMustReturnIfWithinTimeout[blazePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="decreasingSizeMustEventuallyDeallocateSurplusObjects[blazePool]" classname="stormpot.PoolTest" time="0.026"/>
      <testcase name="awaitWithTimeoutOnFinishedCompletionWhenInterruptedMustThrow[blazePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="applyMustReleaseClaimedObject[blazePool]" classname="stormpot.PoolTest" time="0.003"/>
      <testcase name="callingShutdownMustNotAffectInterruptionStatus[blazePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="claimMustStayWithinTimeoutEvenIfExpiredObjectIsReleased[blazePool]" classname="stormpot.PoolTest" time="0.054"/>
      <testcase name="applyMustReleaseClaimedObjectEvenIfFunctionThrows[blazePool]" classname="stormpot.PoolTest" time="0.01"/>
      <testcase name="claimMustThrowIfAllocationReturnsNull[blazePool]" classname="stormpot.PoolTest" time="0.003"/>
      <testcase name="supplyMustNotCallConsumerIfTimeoutElapses[blazePool]" classname="stormpot.PoolTest" time="0.013"/>
      <testcase name="constructorMustThrowOnPoolSizeLessThanOne[blazePool]" classname="stormpot.PoolTest" time="0.01"/>
      <testcase name="mustReplaceExpiredPoolables[blazePool]" classname="stormpot.PoolTest" time="0.01"/>
      <testcase name="applyMustUnblockByConcurrentRelease[blazePool]" classname="stormpot.PoolTest" time="0.031"/>
      <testcase name="blockedClaimWithTimeoutMustThrowUponInterruption[blazePool]" classname="stormpot.PoolTest" time="0.012"/>
      <testcase name="slotInfoMustHaveAgeInMillis[blazePool]" classname="stormpot.PoolTest" time="0.006"/>
      <testcase name="supplyMustCallConsumerIfObjectClaimedWithinTimeout[blazePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="mustNotHoldOnToDeallocatedObjectsWhenLeakDetectionIsDisabled[blazePool]" classname="stormpot.PoolTest" time="0.053"/>
      <testcase name="managedPoolMustCountAllocationsFailingByReturningNull[blazePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="supplyMustThrowOnNullTimeout[blazePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="mustNotLeakSlotsIfExpirationThrowsThrowableInsteadOfException[blazePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="slotInfoMustRememberStamp[blazePool]" classname="stormpot.PoolTest" time="0.004"/>
      <testcase name="settingTargetSizeOnPoolThatHasBeenShutDownDoesNothing[blazePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="mustUseProvidedExpiration[blazePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="awaitOnShutdownMustReturnWhenClaimedObjectsAreReleased[blazePool]" classname="stormpot.PoolTest" time="0.022"/>
      <testcase name="managedPoolMustCountReallocationsFailingWithExceptions[blazePool]" classname="stormpot.PoolTest" time="0.009"/>
      <testcase name="slotsThatMakeTheExpirationThrowAreInvalid[blazePool]" classname="stormpot.PoolTest" time="0.003"/>
      <testcase name="depletedPoolThatHasBeenShutDownMustThrowUponClaim[blazePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="mustNotReallocateObjectsThatAreNotExpiredByTheBackgroundCheck[blazePool]" classname="stormpot.PoolTest" time="0.106"/>
      <testcase name="managedPoolMustCountAllocationsFailingWithExceptions[blazePool]" classname="stormpot.PoolTest" time="0.012"/>
      <testcase name="exceptionsFromExpirationMustBubbleOut[blazePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="timeoutCannotBeNull[blazePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="targetSizeMustBeConfiguredSizeByDefault[blazePool]" classname="stormpot.PoolTest" time="0.0"/>
      <testcase name="awaitingOnAlreadyCompletedShutDownMustNotBlock[blazePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="mustGetPooledObjectsFromAllocator[blazePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="mustSwallowExceptionsFromDeallocateThroughRelease[blazePool]" classname="stormpot.PoolTest" time="0.007"/>
      <testcase name="mustCompleteShutDownEvenIfAllSlotsHaveNullErrors[blazePool]" classname="stormpot.PoolTest" time="0.004"/>
      <testcase name="mustProactivelyReallocatePoisonedSlotsWhenReallocatorStopsThrowingExceptions[blazePool]" classname="stormpot.PoolTest" time="0.004"/>
      <testcase name="shutdownCallMustReturnFastIfPoolablesAreStillClaimed[blazePool]" classname="stormpot.PoolTest" time="0.005"/>
      <testcase name="awaitCompletionWithNullTimeUnitMustThrow[blazePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="claimMustStayWithinDeadlineEvenIfAllocatorBlocks[blazePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="applyMustNotCallFunctionIfTimeoutElapses[blazePool]" classname="stormpot.PoolTest" time="0.003"/>
      <testcase name="explicitExpiryFromExpirationMustAllowOneClaimPerObject[blazePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="getTargetSizeMustReturnLastSetTargetSize[blazePool]" classname="stormpot.PoolTest" time="0.0"/>
      <testcase name="constructorMustThrowOnNullAllocator[blazePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="shuttingPoolDownMustUnblockApplyAndThrow[blazePool]" classname="stormpot.PoolTest" time="0.026"/>
      <testcase name="supplyMustUnblockByConcurrentRelease[blazePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="managedPoolMustNotRecordObjectLifetimeLatencyBeforeFirstDeallocation[blazePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="mustProactivelyReallocatePoisonedSlotsWhenAllocatorStopsThrowingExceptions[blazePool]" classname="stormpot.PoolTest" time="0.0"/>
      <testcase name="shutdownMustNotDeallocateEmptySlots[blazePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="blockedSupplyMustThrowOnInterrupt[blazePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="increasingSizeMustAllowMoreAllocations[blazePool]" classname="stormpot.PoolTest" time="0.051"/>
      <testcase name="mustSwallowExceptionsFromDeallocateThroughShutdown[blazePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="mustPropagateExceptionsFromAllocateThroughClaim[blazePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="mustNotCachePoisonedSlots[blazePool]" classname="stormpot.PoolTest" time="0.018"/>
      <testcase name="increasingAndDecreasingSizeInQuickSuccessionMustEventuallyReachTargetSize[blazePool]" classname="stormpot.PoolTest" time="0.003"/>
      <testcase name="claimWhenInterruptedMustThrow[blazePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="mustUnbiasObjectsNoLongerClaimed[blazePool]" classname="stormpot.PoolTest" time="0.0"/>
      <testcase name="slotInfoStampMustResetIfSlotsAreReused[blazePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="awaitOnCompletionWhenInterruptedMustThrow[blazePool]" classname="stormpot.PoolTest" time="0.0"/>
      <testcase name="preventClaimFromPoolThatIsShutDown[blazePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="managedPoolMustGivePoolState[blazePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="applyMustThrowOnNullTimeout[blazePool]" classname="stormpot.PoolTest" time="0.0"/>
      <testcase name="mustNotHoldOnToDeallocatedObjectsWhenLeakDetectionIsEnabled[blazePool]" classname="stormpot.PoolTest" time="0.045"/>
      <testcase name="applyMustReturnEmptyIfFunctionReturnsNull[blazePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="slotInfoMustHaveReferenceToItsPoolable[blazePool]" classname="stormpot.PoolTest" time="0.004"/>
      <testcase name="managedPoolMustCountLeakedObjects[blazePool]" classname="stormpot.PoolTest" time="0.037"/>
      <testcase name="awaitCompletionWithTimeoutLessThanOneMustReturnImmediately[blazePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="blockedApplyMustThrowOnInterrupt[blazePool]" classname="stormpot.PoolTest" time="0.003"/>
      <testcase name="mustDeallocateExpiredPoolablesAndStayWithinSizeLimit[blazePool]" classname="stormpot.PoolTest" time="0.004"/>
      <testcase name="mustReuseAllocatedObjects[blazePool]" classname="stormpot.PoolTest" time="0.0"/>
      <testcase name="shutdownMustNotDeallocateClaimedPoolables[blazePool]" classname="stormpot.PoolTest" time="0.014"/>
      <testcase name="mustCompleteShutdownEvenIfAllocatorEatsTheInterruptSignal[blazePool]" classname="stormpot.PoolTest" time="0.015"/>
      <testcase name="mustNotFrivolouslyReallocateNonPoisonedSlotsDuringEagerRecovery[blazePool]" classname="stormpot.PoolTest" time="0.005"/>
      <testcase name="objectMustBeClaimableAfterBackgroundReallocation[blazePool]" classname="stormpot.PoolTest" time="0.056"/>
      <testcase name="mustReallocateExplicitlyExpiredObjectsInBackgroundWithoutBgExpiration[blazePool]" classname="stormpot.PoolTest" time="0.052"/>
      <testcase name="mustBeAbleToShutDownEvenIfInterrupted[blazePool]" classname="stormpot.PoolTest" time="0.004"/>
      <testcase name="mustReplaceExplicitlyExpiredObjectsEvenIfDeallocationFails[blazePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="supplyMustReleaseClaimedObject[blazePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="applyMustThrowIfThePoolIsShutDown[blazePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="supplyMustReturnFalseIfTimeoutElapses[blazePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="mustStillBeUsableAfterExceptionInReallocate[blazePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="shutdownMustEventuallyDeallocateAllPoolables[blazePool]" classname="stormpot.PoolTest" time="0.024"/>
      <testcase name="managedPoolMustAllowGettingAndSettingPoolTargetSize[blazePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="blockingOnClaimWithTimeoutMustResumeWhenPoolablesAreReleased[blazePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="managedPoolMustGetLatencyPercentilesFromConfiguredMetricsRecorder[blazePool]" classname="stormpot.PoolTest" time="0.003"/>
      <testcase name="mustCompleteShutDownEvenIfAllSlotsHaveAllocationErrors[blazePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="backgroundExpirationMustNotExpireObjectsThatAreClaimed[blazePool]" classname="stormpot.PoolTest" time="0.106"/>
      <testcase name="claimMustThrowIfReallocationReturnsNull[blazePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="poolMustUseConfiguredThreadFactoryWhenCreatingBackgroundThreads[blazePool]" classname="stormpot.PoolTest" time="0.003"/>
      <testcase name="mustPropagateExceptionsFromReallocateThroughClaim[blazePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="mustStillBeUsableAfterExceptionInAllocate[blazePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="managedPoolMustCountAllocations[blazePool]" classname="stormpot.PoolTest" time="0.0"/>
      <testcase name="disabledLeakDetectionMustNotBreakResize[blazePool]" classname="stormpot.PoolTest" time="0.117"/>
      <testcase name="slotInfoAgeMustResetAfterReallocation[blazePool]" classname="stormpot.PoolTest" time="0.105"/>
      <testcase name="supplyMustReleaseClaimedObjectEvenIfConsumerThrows[blazePool]" classname="stormpot.PoolTest" time="0.004"/>
      <testcase name="shuttingPoolDownMustUnblockSupplyAndThrow[blazePool]" classname="stormpot.PoolTest" time="0.025"/>
      <testcase name="mustNotDeallocateTheSameObjectMoreThanOnce[blazePool]" classname="stormpot.PoolTest" time="0.003"/>
      <testcase name="constructorMustThrowIfConfiguredThreadFactoryReturnsNull[blazePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="awaitWithTimeoutMustReturnFalseIfTimeoutElapses[blazePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="managedPoolMustNotCountResizeAsLeak[blazePool]" classname="stormpot.PoolTest" time="0.169"/>
    </testsuite>
    <testsuite name="[queuePool]" time="1.851">
      <testcase name="mustProactivelyReallocatePoisonedSlotsWhenAllocatorStopsReturningNull[queuePool]" classname="stormpot.PoolTest" time="0.004"/>
      <testcase name="awaitWithTimeoutMustReturnTrueIfCompletesWithinTimeout[queuePool]" classname="stormpot.PoolTest" time="0.021"/>
      <testcase name="mustDeallocateAllPoolablesBeforeShutdownTaskReturns[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="managedPoolMustNotCountShutDownAsLeak[queuePool]" classname="stormpot.PoolTest" time="0.037"/>
      <testcase name="applyMustReturnEmptyIfTimeoutElapses[queuePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="throwingInterruptedExceptionFromClaimMustClearInterruptedFlag[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="awaitWithTimeoutOnCompletionMustThrowUponInterruption[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="awaitOnFinishedCompletionMustClearInterruption[queuePool]" classname="stormpot.PoolTest" time="0.0"/>
      <testcase name="claimWithTimeoutValueLessThanOneMustReturnImmediately[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="constructorMustThrowOnNullExpiration[queuePool]" classname="stormpot.PoolTest" time="0.0"/>
      <testcase name="slotInfoClaimCountMustIncreaseWithClaims[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="biasedClaimMustUpgradeToOrdinaryClaimIfTheObjectIsPulledFromTheQueue[queuePool]" classname="stormpot.PoolTest" time="0.0"/>
      <testcase name="managedPoolMustReturnMinusOneForLeakedObjectCountWhenDetectionIsDisabled[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="slotInfoAgeMustResetAfterAllocation[queuePool]" classname="stormpot.PoolTest" time="0.101"/>
      <testcase name="applyMustThrowOnInterrupt[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="slotInfoMustBeAbleToProduceRandomNumbers[queuePool]" classname="stormpot.PoolTest" time="0.018"/>
      <testcase name="managedPoolMustReturnNaNWhenNoMetricsRecorderHasBeenConfigured[queuePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="mustBeAbleToShutDownWhenAllocateAlwaysThrows[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="mustNotThrowWhenReleasingObjectClaimedByAnotherThread[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="awaitOnCompletionWhenInterruptedMustClearInterruption[queuePool]" classname="stormpot.PoolTest" time="0.009"/>
      <testcase name="supplyMustThrowIfThePoolIsShutDown[queuePool]" classname="stormpot.PoolTest" time="0.007"/>
      <testcase name="targetSizeMustBeGreaterThanZero[queuePool]" classname="stormpot.PoolTest" time="0.0"/>
      <testcase name="managedPoolLeakedObjectCountMustStartAtZero[queuePool]" classname="stormpot.PoolTest" time="0.008"/>
      <testcase name="applyMustReturnResultOfFunction[queuePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="managedPoolMustCountReallocationsFailingByReturningNull[queuePool]" classname="stormpot.PoolTest" time="0.003"/>
      <testcase name="managedPoolMustRecordObjectLifetimeOnDeallocateInConfiguredMetricsRecorder[queuePool]" classname="stormpot.PoolTest" time="0.055"/>
      <testcase name="slotInfoClaimCountMustResetIfSlotsAreReused[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="mustProactivelyReallocatePoisonedSlotsWhenReallocatorStopsReturningNull[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="mustCheckObjectExpirationInBackgroundWhenEnabled[queuePool]" classname="stormpot.PoolTest" time="0.052"/>
      <testcase name="managedPoolInterfaceMustBeMXBeanConformant[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="supplyMustThrowOnNullConsumer[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="depletedPoolThatHasBeenShutDownMustThrowUponClaimEvenAfterSomeTime[queuePool]" classname="stormpot.PoolTest" time="0.011"/>
      <testcase name="managedPoolMustBeExposableThroughAnMBeanServerAsAnMXBean[queuePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="backgroundExpirationMustExpireObjectsWhenExpirationThrows[queuePool]" classname="stormpot.PoolTest" time="0.053"/>
      <testcase name="constructorMustThrowOnNullThreadFactory[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="mustReallocateExplicitlyExpiredObjectsInBackgroundWithBackgroundExpiration[queuePool]" classname="stormpot.PoolTest" time="0.063"/>
      <testcase name="poolMustTolerateInterruptedExceptionFromAllocatorWhenNotShutDown[queuePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="managedPoolMustRecordObjectLifetimeOnReallocateInConfiguredMetricsRecorder[queuePool]" classname="stormpot.PoolTest" time="0.006"/>
      <testcase name="claimMustReturnNullIfTimeoutElapses[queuePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="supplyMustThrowOnInterrupt[queuePool]" classname="stormpot.PoolTest" time="0.0"/>
      <testcase name="mustDeallocateExplicitlyExpiredObjects[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="blockingClaimWithTimeoutMustWaitIfPoolIsEmpty[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="applyMustThrowOnNullFunction[queuePool]" classname="stormpot.PoolTest" time="0.0"/>
      <testcase name="explicitlyExpiryMustBeIdempotent[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="mustNotReallocateWhenReleasingExpiredObjectsIntoShrunkPool[queuePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="poolThatHasBeenShutDownMustThrowUponClaimEvenIfItHasAvailableUnbiasedObjects[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="applyMustCallFunctionIfObjectClaimedWithinTimeout[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="blockedClaimMustThrowWhenPoolIsShutDown[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="claimMustReturnIfWithinTimeout[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="decreasingSizeMustEventuallyDeallocateSurplusObjects[queuePool]" classname="stormpot.PoolTest" time="0.066"/>
      <testcase name="awaitWithTimeoutOnFinishedCompletionWhenInterruptedMustThrow[queuePool]" classname="stormpot.PoolTest" time="0.0"/>
      <testcase name="applyMustReleaseClaimedObject[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="callingShutdownMustNotAffectInterruptionStatus[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="claimMustStayWithinTimeoutEvenIfExpiredObjectIsReleased[queuePool]" classname="stormpot.PoolTest" time="0.053"/>
      <testcase name="applyMustReleaseClaimedObjectEvenIfFunctionThrows[queuePool]" classname="stormpot.PoolTest" time="0.004"/>
      <testcase name="claimMustThrowIfAllocationReturnsNull[queuePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="supplyMustNotCallConsumerIfTimeoutElapses[queuePool]" classname="stormpot.PoolTest" time="0.003"/>
      <testcase name="constructorMustThrowOnPoolSizeLessThanOne[queuePool]" classname="stormpot.PoolTest" time="0.0"/>
      <testcase name="mustReplaceExpiredPoolables[queuePool]" classname="stormpot.PoolTest" time="0.003"/>
      <testcase name="applyMustUnblockByConcurrentRelease[queuePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="blockedClaimWithTimeoutMustThrowUponInterruption[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="slotInfoMustHaveAgeInMillis[queuePool]" classname="stormpot.PoolTest" time="0.014"/>
      <testcase name="supplyMustCallConsumerIfObjectClaimedWithinTimeout[queuePool]" classname="stormpot.PoolTest" time="0.009"/>
      <testcase name="mustNotHoldOnToDeallocatedObjectsWhenLeakDetectionIsDisabled[queuePool]" classname="stormpot.PoolTest" time="0.04"/>
      <testcase name="managedPoolMustCountAllocationsFailingByReturningNull[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="supplyMustThrowOnNullTimeout[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="mustNotLeakSlotsIfExpirationThrowsThrowableInsteadOfException[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="slotInfoMustRememberStamp[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="settingTargetSizeOnPoolThatHasBeenShutDownDoesNothing[queuePool]" classname="stormpot.PoolTest" time="0.0"/>
      <testcase name="mustUseProvidedExpiration[queuePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="awaitOnShutdownMustReturnWhenClaimedObjectsAreReleased[queuePool]" classname="stormpot.PoolTest" time="0.023"/>
      <testcase name="managedPoolMustCountReallocationsFailingWithExceptions[queuePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="slotsThatMakeTheExpirationThrowAreInvalid[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="depletedPoolThatHasBeenShutDownMustThrowUponClaim[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="mustNotReallocateObjectsThatAreNotExpiredByTheBackgroundCheck[queuePool]" classname="stormpot.PoolTest" time="0.112"/>
      <testcase name="managedPoolMustCountAllocationsFailingWithExceptions[queuePool]" classname="stormpot.PoolTest" time="0.018"/>
      <testcase name="exceptionsFromExpirationMustBubbleOut[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="timeoutCannotBeNull[queuePool]" classname="stormpot.PoolTest" time="0.0"/>
      <testcase name="targetSizeMustBeConfiguredSizeByDefault[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="awaitingOnAlreadyCompletedShutDownMustNotBlock[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="mustGetPooledObjectsFromAllocator[queuePool]" classname="stormpot.PoolTest" time="0.012"/>
      <testcase name="mustSwallowExceptionsFromDeallocateThroughRelease[queuePool]" classname="stormpot.PoolTest" time="0.006"/>
      <testcase name="mustCompleteShutDownEvenIfAllSlotsHaveNullErrors[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="mustProactivelyReallocatePoisonedSlotsWhenReallocatorStopsThrowingExceptions[queuePool]" classname="stormpot.PoolTest" time="0.003"/>
      <testcase name="shutdownCallMustReturnFastIfPoolablesAreStillClaimed[queuePool]" classname="stormpot.PoolTest" time="0.003"/>
      <testcase name="awaitCompletionWithNullTimeUnitMustThrow[queuePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="claimMustStayWithinDeadlineEvenIfAllocatorBlocks[queuePool]" classname="stormpot.PoolTest" time="0.003"/>
      <testcase name="applyMustNotCallFunctionIfTimeoutElapses[queuePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="explicitExpiryFromExpirationMustAllowOneClaimPerObject[queuePool]" classname="stormpot.PoolTest" time="0.003"/>
      <testcase name="getTargetSizeMustReturnLastSetTargetSize[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="constructorMustThrowOnNullAllocator[queuePool]" classname="stormpot.PoolTest" time="0.0"/>
      <testcase name="shuttingPoolDownMustUnblockApplyAndThrow[queuePool]" classname="stormpot.PoolTest" time="0.028"/>
      <testcase name="supplyMustUnblockByConcurrentRelease[queuePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="managedPoolMustNotRecordObjectLifetimeLatencyBeforeFirstDeallocation[queuePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="mustProactivelyReallocatePoisonedSlotsWhenAllocatorStopsThrowingExceptions[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="shutdownMustNotDeallocateEmptySlots[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="blockedSupplyMustThrowOnInterrupt[queuePool]" classname="stormpot.PoolTest" time="0.007"/>
      <testcase name="increasingSizeMustAllowMoreAllocations[queuePool]" classname="stormpot.PoolTest" time="0.054"/>
      <testcase name="mustSwallowExceptionsFromDeallocateThroughShutdown[queuePool]" classname="stormpot.PoolTest" time="0.005"/>
      <testcase name="mustPropagateExceptionsFromAllocateThroughClaim[queuePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="mustNotCachePoisonedSlots[queuePool]" classname="stormpot.PoolTest" time="0.019"/>
      <testcase name="increasingAndDecreasingSizeInQuickSuccessionMustEventuallyReachTargetSize[queuePool]" classname="stormpot.PoolTest" time="0.007"/>
      <testcase name="claimWhenInterruptedMustThrow[queuePool]" classname="stormpot.PoolTest" time="0.005"/>
      <testcase name="mustUnbiasObjectsNoLongerClaimed[queuePool]" classname="stormpot.PoolTest" time="0.004"/>
      <testcase name="slotInfoStampMustResetIfSlotsAreReused[queuePool]" classname="stormpot.PoolTest" time="0.003"/>
      <testcase name="awaitOnCompletionWhenInterruptedMustThrow[queuePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="preventClaimFromPoolThatIsShutDown[queuePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="managedPoolMustGivePoolState[queuePool]" classname="stormpot.PoolTest" time="0.005"/>
      <testcase name="applyMustThrowOnNullTimeout[queuePool]" classname="stormpot.PoolTest" time="0.0"/>
      <testcase name="mustNotHoldOnToDeallocatedObjectsWhenLeakDetectionIsEnabled[queuePool]" classname="stormpot.PoolTest" time="0.048"/>
      <testcase name="applyMustReturnEmptyIfFunctionReturnsNull[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="slotInfoMustHaveReferenceToItsPoolable[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="managedPoolMustCountLeakedObjects[queuePool]" classname="stormpot.PoolTest" time="0.043"/>
      <testcase name="awaitCompletionWithTimeoutLessThanOneMustReturnImmediately[queuePool]" classname="stormpot.PoolTest" time="0.0"/>
      <testcase name="blockedApplyMustThrowOnInterrupt[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="mustDeallocateExpiredPoolablesAndStayWithinSizeLimit[queuePool]" classname="stormpot.PoolTest" time="0.003"/>
      <testcase name="mustReuseAllocatedObjects[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="shutdownMustNotDeallocateClaimedPoolables[queuePool]" classname="stormpot.PoolTest" time="0.013"/>
      <testcase name="mustCompleteShutdownEvenIfAllocatorEatsTheInterruptSignal[queuePool]" classname="stormpot.PoolTest" time="0.013"/>
      <testcase name="mustNotFrivolouslyReallocateNonPoisonedSlotsDuringEagerRecovery[queuePool]" classname="stormpot.PoolTest" time="0.005"/>
      <testcase name="objectMustBeClaimableAfterBackgroundReallocation[queuePool]" classname="stormpot.PoolTest" time="0.049"/>
      <testcase name="mustReallocateExplicitlyExpiredObjectsInBackgroundWithoutBgExpiration[queuePool]" classname="stormpot.PoolTest" time="0.053"/>
      <testcase name="mustBeAbleToShutDownEvenIfInterrupted[queuePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="mustReplaceExplicitlyExpiredObjectsEvenIfDeallocationFails[queuePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="supplyMustReleaseClaimedObject[queuePool]" classname="stormpot.PoolTest" time="0.009"/>
      <testcase name="applyMustThrowIfThePoolIsShutDown[queuePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="supplyMustReturnFalseIfTimeoutElapses[queuePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="mustStillBeUsableAfterExceptionInReallocate[queuePool]" classname="stormpot.PoolTest" time="0.012"/>
      <testcase name="shutdownMustEventuallyDeallocateAllPoolables[queuePool]" classname="stormpot.PoolTest" time="0.029"/>
      <testcase name="managedPoolMustAllowGettingAndSettingPoolTargetSize[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="blockingOnClaimWithTimeoutMustResumeWhenPoolablesAreReleased[queuePool]" classname="stormpot.PoolTest" time="0.003"/>
      <testcase name="managedPoolMustGetLatencyPercentilesFromConfiguredMetricsRecorder[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="mustCompleteShutDownEvenIfAllSlotsHaveAllocationErrors[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="backgroundExpirationMustNotExpireObjectsThatAreClaimed[queuePool]" classname="stormpot.PoolTest" time="0.059"/>
      <testcase name="claimMustThrowIfReallocationReturnsNull[queuePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="poolMustUseConfiguredThreadFactoryWhenCreatingBackgroundThreads[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="mustPropagateExceptionsFromReallocateThroughClaim[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="mustStillBeUsableAfterExceptionInAllocate[queuePool]" classname="stormpot.PoolTest" time="0.002"/>
      <testcase name="managedPoolMustCountAllocations[queuePool]" classname="stormpot.PoolTest" time="0.001"/>
      <testcase name="disabledLeakDetectionMustNotBreakResize[queuePool]" classname="stormpot.PoolTest" time="0.124"/>
      <testcase name="slotInfoAgeMustResetAfterReallocation[queuePool]" classname="stormpot.PoolTest" time="0.103"/>
      <testcase name="supplyMustReleaseClaimedObjectEvenIfConsumerThrows[queuePool]" classname="stormpot.PoolTest" time="0.003"/>
      <testcase name="shuttingPoolDownMustUnblockSupplyAndThrow[queuePool]" classname="stormpot.PoolTest" time="0.038"/>
      <testcase name="mustNotDeallocateTheSameObjectMoreThanOnce[queuePool]" classname="stormpot.PoolTest" time="0.007"/>
      <testcase name="constructorMustThrowIfConfiguredThreadFactoryReturnsNull[queuePool]" classname="stormpot.PoolTest" time="0.0"/>
      <testcase name="awaitWithTimeoutMustReturnFalseIfTimeoutElapses[queuePool]" classname="stormpot.PoolTest" time="0.004"/>
      <testcase name="managedPoolMustNotCountResizeAsLeak[queuePool]" classname="stormpot.PoolTest" time="0.176"/>
    </testsuite>
  </testsuite>
</testrun>
